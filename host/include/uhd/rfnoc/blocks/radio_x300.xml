<!--This defines one NoC-Block.-->
<nocblock>
  <name>Radio (X300)</name>
  <blockname>Radio</blockname>
  <key>X300Radio</key>
  <!--There can be several of these:-->
  <ids>
    <id revision="0">12AD100000000001</id>
  </ids>
  <!-- Registers -->
  <registers>
    <!--<setreg>-->
      <!--<name>FFT_RESET</name>-->
      <!--<address>131</address>-->
    <!--</setreg>-->
    <!--<readback>-->
      <!--<name>RB_MAGNITUDE_OUT</name>-->
      <!--<address>1</address>-->
    <!--</readback>-->
  </registers>
  <!-- Args -->
  <args>
    <arg>
      <name>spp</name>
      <type>int</type>
      <value>256</value>
      <check>GE($spp, 0)</check>
      <check_message>spp has to be greater or equal to zero.</check_message>
    </arg>
<!--     <arg>
      <name>pkt_size</name>
      <type>int</type>
      <value>1024</value> sc16, TODO make this dependent on the output type
      <check>EQUAL($pkt_size, MULT($spp, 4))</check>
      <check_message>pkt_size must be 4*spp for otw=sc16.</check_message>
    </arg> -->
  </args>
  <ports>
    <sink>
      <name>in0</name>
      <type>sc16</type>
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </sink>
    <sink>
      <name>in1</name>
      <type>sc16</type>
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </sink>
    <source>
      <name>out0</name>
      <type>sc16</type>
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </source>
    <source>
      <name>out1</name>
      <type>sc16</type>
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </source>
  </ports>
</nocblock>

